---
name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  host_build_test_ubuntu:
    name: Host Build & Test (ubuntu-latest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - uses: hendrikmuhs/ccache-action@ed74d11c0b343532753ecead8a951bb09bb34bc9 # v1.2.14
        with:
          key: ${{ github.job }}-ubuntu-latest
          variant: sccache
      - uses: seanmiddleditch/gha-setup-ninja@96bed6edff20d1dd61ecff9b75cc519d516e6401 # v5
      - uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        with:
          configurePreset: "host"
          buildPreset: "host-Debug-WithPackage"
          #testPreset: "host"
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=sccache', '-DCMAKE_CXX_COMPILER_LAUNCHER=sccache']"
      - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: hal_st
          path: build/host/hal_st-*-Linux.tar.gz
          if-no-files-found: error
      #- name: Upload test logs
      #  if: ${{ failure() }}
      #  uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      #  with:
      #    name: test-logs
      #    path: build/host/Testing/Temporary/
  host_build_test:
    name: Host Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - uses: hendrikmuhs/ccache-action@ed74d11c0b343532753ecead8a951bb09bb34bc9 # v1.2.14
        with:
          key: ${{ github.job }}-${{ matrix.os }}
          variant: sccache
      - uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        with:
          configurePreset: "host-single-Debug"
          buildPreset: "host-single-Debug"
          #testPreset: "host-single-Debug"
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=sccache', '-DCMAKE_CXX_COMPILER_LAUNCHER=sccache']"
      #- name: Upload test logs
      #  if: ${{ failure() }}
      #  uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      #  with:
      #    name: test-logs
      #    path: build/host/Testing/Temporary/
  embedded_build:
    name: Embedded Build
    runs-on: ubuntu-latest
    needs: [host_build_test_ubuntu]
    strategy:
      matrix:
        configuration: ["RelWithDebInfo"]
        gcc: ["10.3-2021.10"]
        target:
          [
            "stm32wb55",
            "stm32wba52",
            "stm32g070",
            "stm32g431",
            "stm32f407",
            "stm32f429",
            "stm32f746",
            "stm32f767",
            "stm32h563",
            "stm32h573"
          ]
        include:
          - gcc: "8-2019-q3"
            configuration: "RelWithDebInfo"
            target: "stm32f767"
          - gcc: "9-2020-q2"
            configuration: "RelWithDebInfo"
            target: "stm32f767"
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - name: Install GNU Arm Embedded Toolchain ${{ matrix.gcc }}
        uses: carlosperate/arm-none-eabi-gcc-action@0cc83a7330501be1848887e2966aaceb49a4bb12 # v1.9.1
        with:
          release: ${{ matrix.gcc }}
      - run: sudo apt-get update && sudo apt-get install ninja-build xsltproc
      - uses: hendrikmuhs/ccache-action@ed74d11c0b343532753ecead8a951bb09bb34bc9 # v1.2.14
        with:
          key: ${{ matrix.gcc }}-${{ matrix.configuration }}-${{ matrix.target }}
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: hal_st
      - run: tar -zxvf hal_st-*.tar.gz
      - run: mkdir install && mv hal_st-*/* install/
      - uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
        with:
          configurePreset: ${{ matrix.target }}
          buildPreset: ${{ matrix.target }}-${{ matrix.configuration }}
          configurePresetAdditionalArgs: "['-DCMAKE_C_COMPILER_LAUNCHER=ccache', '-DCMAKE_CXX_COMPILER_LAUNCHER=ccache']"
